#!/usr/bin/env node

import fs from 'fs';
import path from 'path';

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ VX School Landing...\n');

const checks = [];

// –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
if (fs.existsSync('.env')) {
  checks.push({ name: '‚úÖ .env —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç', status: 'ok' });
  
  const envContent = fs.readFileSync('.env', 'utf8');
  if (envContent.includes('TELEGRAM_BOT_TOKEN=') && envContent.includes('TELEGRAM_CHAT_ID=')) {
    checks.push({ name: '‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã', status: 'ok' });
  } else {
    checks.push({ name: '‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã', status: 'error' });
  }
} else {
  checks.push({ name: '‚ùå .env —Ñ–∞–π–ª –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç', status: 'error' });
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ .gitignore
if (fs.existsSync('.gitignore')) {
  const gitignoreContent = fs.readFileSync('.gitignore', 'utf8');
  if (gitignoreContent.includes('.env')) {
    checks.push({ name: '‚úÖ .env —Ñ–∞–π–ª –≤ .gitignore', status: 'ok' });
  } else {
    checks.push({ name: '‚ùå .env —Ñ–∞–π–ª –Ω–µ –≤ .gitignore', status: 'error' });
  }
} else {
  checks.push({ name: '‚ùå .gitignore —Ñ–∞–π–ª –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç', status: 'error' });
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ data –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if (fs.existsSync('data')) {
  checks.push({ name: '‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è data —Å—É—â–µ—Å—Ç–≤—É–µ—Ç', status: 'ok' });
} else {
  checks.push({ name: '‚ö†Ô∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è data –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ', status: 'warning' });
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ server.js –Ω–∞ —Ö–∞—Ä–¥–∫–æ–¥ —Ç–æ–∫–µ–Ω–æ–≤
const serverContent = fs.readFileSync('server.js', 'utf8');
if (serverContent.includes('process.env.TELEGRAM_BOT_TOKEN') && !serverContent.includes('7813770954')) {
  checks.push({ name: '‚úÖ –¢–æ–∫–µ–Ω—ã –≤—ã–Ω–µ—Å–µ–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è', status: 'ok' });
} else {
  checks.push({ name: '‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Ö–∞—Ä–¥–∫–æ–¥ —Ç–æ–∫–µ–Ω—ã –≤ –∫–æ–¥–µ', status: 'error' });
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
if (serverContent.includes('sanitizeInput') && serverContent.includes('validateTelegram')) {
  checks.push({ name: '‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞', status: 'ok' });
} else {
  checks.push({ name: '‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç', status: 'error' });
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ rate limiting
if (serverContent.includes('contactAttempts') && serverContent.includes('RATE_LIMIT_WINDOW')) {
  checks.push({ name: '‚úÖ Rate limiting —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω', status: 'ok' });
} else {
  checks.push({ name: '‚ùå Rate limiting –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç', status: 'error' });
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ security headers
if (serverContent.includes('X-Content-Type-Options') && serverContent.includes('Content-Security-Policy')) {
  checks.push({ name: '‚úÖ Security headers –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã', status: 'ok' });
} else {
  checks.push({ name: '‚ùå Security headers –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç', status: 'error' });
}

// –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:\n');
let hasErrors = false;
let hasWarnings = false;

checks.forEach(check => {
  console.log(check.name);
  if (check.status === 'error') hasErrors = true;
  if (check.status === 'warning') hasWarnings = true;
});

console.log('\n' + '='.repeat(50));

if (hasErrors) {
  console.log('‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏!');
  console.log('üìñ –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ SECURITY.md –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.');
  process.exit(1);
} else if (hasWarnings) {
  console.log('‚ö†Ô∏è  –ï—Å—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è, –Ω–æ –ø—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é.');
  process.exit(0);
} else {
  console.log('‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!');
  console.log('üöÄ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é.');
  process.exit(0);
}